server {

  listen       80;
  server_name  *.{{getv "/alice/domain"}};

  access_log   /dev/stdout main ;
  error_log    /dev/stderr ;

  set_real_ip_from        127.0.0.0/8;
  set_real_ip_from        192.168.0.0/16; # plusline
  set_real_ip_from        10.42.0.0/16;   # rancher
  set_real_ip_from        172.16.0.0/16;  # vpn
  set_real_ip_from        172.17.0.0/16;  # docker
  set_real_ip_from        172.18.0.0/16;  # docker
  set_real_ip_from        172.26.0.0/16;  # aws
  real_ip_recursive       on;
  real_ip_header          X-Forwarded-For;

  index        index.php;

  error_page 500 502 503 504 @maintenance;

  set $tscheme $http_x_forwarded_proto;

  add_header              X-Server  $hostname always;

  location @maintenance {
    rewrite ^(?!.*(png|txt).*).*$ /maintenance.html last;
  }

  try_files  $uri $uri/ /index.php?$args;
  # try_files don't seems to be applying to the server context, forcing it with a location
  location ~ (^/.*/$) {
    try_files   $uri $uri/ /index.php?$args;
  }

  location ~* (\.(sql|svn|git|bak|backup|bck|old|sh|py|pl|htaccess|db|tmp)|~)$ {
    deny all;
  }
  location = /rev.txt {
    access_log  off;
    auth_basic  off;
    expires     0;
    add_header  Cache-Control private;
    add_header  X-Server  $hostname always;
  }

  root         /app/alice/public ;

 location ~ \.php$ {
    fastcgi_pass    unix:/var/run/php/php7.0-fpm_alice.sock;
    fastcgi_index   index.php;
    include         fastcgi_params;

    # http://forum.nginx.org/read.php?2,88845,page=3
    try_files  $uri =404;
    fastcgi_param   PHP_VALUE       " session.save_handler={{getv "/alice/session/savehandler"}}\n
                                      session.save_path={{getv "/alice/session/savepath"}}\n
                                      date.timezone={{getv "/alice/timezone"}}\n
                                      newrelic.enabled=1\n
                                      newrelic.appname={{if eq (getv "/alice/environment") "live"}}www{{else}}alice-{{ getv "/alice/environment" }}{{end}}.{{getv "/alice/domain"}}\n
                                      newrelic.framework=yii\n
                                      error_log=/dev/stderr ";
    fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param   APPLICATION_ENV {{getv "/alice/environment"}};
    fastcgi_param   HTTPS           $thttps;
    fastcgi_param   REMOTE_ADDR     $remote_addr;
    fastcgi_param   HTTP_X_REAL_IP  $remote_addr;
  }

  # rewrite to trailing slash, if not file or has specific ending
  location ~* ((.*)(/|.css|.cur|.gif|.gz|.htc|.html|.ico|.jpeg|.jpg|.png|.js|.txt|.json|apple-app-site-association)$|(.*)[?](.*)) {
    # do nothing, continue processing
    try_files   $uri $uri/ /index.php?$args;
  }

  location ^~ /mobapi/v2.1/ { try_files   $uri $uri/ /index.php?$args; }
  location ^~ /mobapi/v2.2/ { try_files   $uri $uri/ /index.php?$args; }
  location ^~ /mobapi/v2.3/ { try_files   $uri $uri/ /index.php?$args; }

  location ^~ /mobapi/ {
    # workaround for the appending / in posts in mobapi
    # do nothing, continue processing
    try_files   $uri $uri/ /index.php?$args/;
  }
  location / {
    if ( $query_string ) {
      return 301 $tscheme://$host$uri/?$query_string ;
    }
    return 301 $tscheme://$host$uri/ ;
  }

  location = /f5check/ {
    access_log  off;
    if ($http_user_agent !~* {{toUpper (getv "/alice/country/iso")}}AMZ ) {
       return 404;
    }

    fastcgi_pass    unix:/var/run/php/php7.0-fpm_alice.sock;
    fastcgi_index   f5check.php;
    include         fastcgi_params; 
    fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }

  location = /healthz/ {
    # only allowed on Rancher internal network
    access_log  off;
    allow   10.42.0.0/16;
    deny    all;

    fastcgi_pass    unix:/var/run/php/php7.0-fpm_alice.sock;
    fastcgi_index   f5check.php;
    include         fastcgi_params;
    fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }
}

# every server_name not defined above for this domain will redirect to the homepage
server {
  listen 80;
  server_name {{getv "/alice/domain"}};

  access_log    /dev/stdout main;
  error_log     /dev/stderr;

  return       302 $http_x_forwarded_proto://{{if eq (getv "/alice/environment") "live"}}www{{else}}alice-{{ getv "/alice/environment" }}{{end}}.{{getv "/alice/domain"}}$request_uri;
}


# set the $thttps to avoid the "if" cost
map $http_x_forwarded_proto $thttps {
        default         "off";
        ~*https         "on";
}
